name: Simulate Deployment History

on:
  workflow_dispatch:
    inputs:
      count:
        description: "Number of fake deployments to simulate"
        required: true
        default: 5
      failRatio:
        description: "Failure ratio (0.0 - 1.0)"
        required: true
        default: 0.3

jobs:
  simulate-deployments:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed to access full commit history

      - name: Simulate Deployments
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COUNT: ${{ github.event.inputs.count }}
          FAIL_RATIO: ${{ github.event.inputs.failRatio }}
        run: |
          set -e

          echo "Simulating $COUNT deployments with failure ratio $FAIL_RATIO"

          # Get N latest commits from master branch
          COMMITS=$(git rev-list origin/master | head -n "$COUNT")
          i=1

          for SHA in $COMMITS; do
            echo "Simulating deployment $i for commit $SHA"

            DEPLOYMENT_JSON=$(jq -n \
              --arg ref "$SHA" \
              --arg desc "Simulated deployment #$i" \
              --arg env "simulated" \
              '{
                ref: $ref,
                description: $desc,
                required_contexts: [],
                auto_merge: false,
                environment: $env
              }')

            DEPLOYMENT=$(curl -s -X POST \
              -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/deployments \
              -d "$DEPLOYMENT_JSON")

            DEPLOYMENT_ID=$(echo "$DEPLOYMENT" | jq -r '.id')

            if [[ "$DEPLOYMENT_ID" == "null" || -z "$DEPLOYMENT_ID" ]]; then
              echo "‚ùå Failed to create deployment for $SHA"
              continue
            fi

            echo "Created deployment ID: $DEPLOYMENT_ID"

            # Decide success or failure
            R=$(awk -v seed=$RANDOM 'BEGIN { srand(seed); print rand() }')
            if (( $(echo "$R < $FAIL_RATIO" | bc -l) )); then
              echo "Simulating failure for deployment $DEPLOYMENT_ID"

              curl -s -X POST \
                -H "Authorization: token $GH_TOKEN" \
                https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses \
                -d '{"state":"failure","description":"Simulated failed deployment","environment":"simulated"}'

              sleep 3

              echo "Simulating recovery for deployment $DEPLOYMENT_ID"
              curl -s -X POST \
                -H "Authorization: token $GH_TOKEN" \
                https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses \
                -d '{"state":"success","description":"Simulated recovery","environment":"simulated"}'

            else
              echo "Simulating success for deployment $DEPLOYMENT_ID"
              curl -s -X POST \
                -H "Authorization: token $GH_TOKEN" \
                https://api.github.com/repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses \
                -d '{"state":"success","description":"Simulated successful deployment","environment":"simulated"}'
            fi

            i=$((i + 1))
            sleep 2
          done
