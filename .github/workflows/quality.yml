name: Quality Metrics Pipeline

on:
  push:
    branches:
      - master

jobs:
  quality-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install GitLeaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.24.3/gitleaks_8.24.3_linux_x64.tar.gz -o gitleaks.tar.gz
          tar -xzf gitleaks.tar.gz
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/gitleaks


      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: json
          output: trivy-results.json

      - name: Send Trivy results to API
        run: |
          curl -X POST https://e101-144-178-66-36.ngrok-free.app/api/metrics \
          -H "Content-Type: application/json" \
          -H "X-Tool-Name: Trivy" \
          -H "X-Repo-Name: https://github.com/mennokonijn/unit-test-examples" \
          --data @trivy-results.json


      - name: Run GitLeaks
        run: |
          gitleaks detect --source=. --report-format json --report-path=gitleaks.json --no-git
        continue-on-error: true

      - name: Send GitLeaks results to API
        run: |
          curl -X POST https://e101-144-178-66-36.ngrok-free.app/api/metrics \
          -H "Content-Type: application/json" \
          -H "X-Tool-Name: GitLeaks" \
          -H "X-Repo-Name: https://github.com/mennokonijn/unit-test-examples" \
          --data @gitleaks.json


      - name: Run Jest Tests
        run: |
          npx jest --coverage --outputFile=jest-results.json --json


      - name: Send Jest results to API
        run: |
          curl -X POST https://e101-144-178-66-36.ngrok-free.app/api/metrics \
          -H "Content-Type: application/json" \
          -H "X-Tool-Name: Jest" \
          -H "X-Repo-Name: https://github.com/mennokonijn/unit-test-examples" \
          --data @jest-results.json


      - name: Install SonarScanner
        run: |
          npm install -g sonarqube-scanner


      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
          -Dsonar.sources=. \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}


      - name: Fetch SonarQube Metrics
        run: |
          curl -s -u ${{ secrets.SONAR_TOKEN }}: \
          "${{ secrets.SONAR_HOST_URL }}/api/measures/component?component=${{ secrets.SONAR_PROJECT_KEY }}&metricKeys=code_smells,complexity,cognitive_complexity,duplicated_lines_density,coverage" \
          -o sonar-results.json


      - name: Send SonarQube results to API
        run: |
          curl -X POST https://e101-144-178-66-36.ngrok-free.app/api/metrics \
          -H "Content-Type: application/json" \
          -H "X-Tool-Name: SonarQube" \
          -H "X-Repo-Name: https://github.com/mennokonijn/unit-test-examples" \
          --data @sonar-results.json